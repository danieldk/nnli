name: Build and Release

on:
  workflow_run:
    workflows: ["Publish to Crates.io"]
    types:
      - completed
    branches:
      - main

jobs:
  build:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: x86_64-unknown-linux-gnu

    - name: Install Cross-Compilation Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        sudo apt-get install -y gcc-multilib g++-multilib
        sudo apt-get install -y mingw-w64

    - name: Build for x86_64 Linux
      run: cargo build --release --target x86_64-unknown-linux-gnu

    - name: Build for aarch64 Linux
      run: cargo build --release --target aarch64-unknown-linux-gnu

    - name: Build for macOS (x86_64)
      run: cargo build --release --target x86_64-apple-darwin

    - name: Build for macOS (aarch64)
      run: cargo build --release --target aarch64-apple-darwin

    - name: Build for Windows
      run: cargo build --release --target x86_64-pc-windows-msvc

    - name: Rename and move artifacts
      run: |
        mkdir -p artifacts
        cp target/x86_64-unknown-linux-gnu/release/nnli artifacts/nnli-linux-x86_64
        cp target/aarch64-unknown-linux-gnu/release/nnli artifacts/nnli-linux-aarch64
        cp target/x86_64-apple-darwin/release/nnli artifacts/nnli-macos-x86_64
        cp target/aarch64-apple-darwin/release/nnli artifacts/nnli-macos-aarch64
        cp target/x86_64-pc-windows-msvc/release/nnli.exe artifacts/nnli-windows-x86_64.exe

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ./artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish release on GitHub
      if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with:
        artifacts: ./artifacts/*
        token: ${{ secrets.GITHUB_TOKEN }}